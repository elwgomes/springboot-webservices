!!!! manter sempre a estrutura de camadas;

resources ->
são usados majoritariamente para criar endpoints na aplicação
resources serao sempre controladores rest (@RestController)


Set<Object> object = new Hashset<>();
    {Serve para informar ao programa que não ireir admitir repeticoes}




-- Annotations in Java  --
@GetMapping (metodo GET do http)
    {usamos para recuperar dados do banco de dados}

@PostMapping (metodo POST do http)
    {usamos para postar dados no banco de dados}

@DeleteMapping
    {usamos para deletar dados no banco de dados}

@PutMapping 
    {usamos para atualizar dados no banco de dados}

@PathVariable
    {usamos para que a variavel seja reconhecida como variavel da nossa URL}


@RequestBody 
    {para 'postar' o objeto em formato json}

@OneToOne (cascade = CascadeType.ALL)
    {serve para mapear e deixar as duas entidades com o mesmo id, ou seja, mesmo codigo}

@Id
    {Serve para informar ao JPA qual a chave primaria}

@GeneratedValue(strategy = GenerationType.IDENTITY)
    {Serve para informar ao JPA que a chave numerica sera auto incrementavel}

@Configuration and @Profile("***")
    {1- Indica que a classe eh de configuracao;
     2- Indica o profile que ta sendo usado (pode ser verificado no application.properties)
    }




